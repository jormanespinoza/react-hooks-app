[{"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\index.js":"1","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\03-examples\\MultipleCustomHooks.js":"2","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\hooks\\useFetch.js":"3","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\hooks\\useCounter.js":"4","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\04-useRef\\FocusScreen.js":"5","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\04-useRef\\RealExampleRef.js":"6","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\05-useLayoutEffect\\Layout.js":"7"},{"size":800,"mtime":1615041229750,"results":"8","hashOfConfig":"9"},{"size":1284,"mtime":1612228283858,"results":"10","hashOfConfig":"9"},{"size":821,"mtime":1612231136203,"results":"11","hashOfConfig":"9"},{"size":370,"mtime":1612228283858,"results":"12","hashOfConfig":"9"},{"size":757,"mtime":1612230048523,"results":"13","hashOfConfig":"9"},{"size":575,"mtime":1612230750282,"results":"14","hashOfConfig":"9"},{"size":1297,"mtime":1615042731660,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2onwar",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\index.js",[],["33","34"],"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\03-examples\\MultipleCustomHooks.js",[],["35","36"],"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\hooks\\useFetch.js",["37"],"import { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const isMounted = useRef(true);\r\n    const [state, setState] = useState({ data: null, loading: true, error: null });\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setState({ data: null, loading: true, error: null });\r\n\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setState({\r\n                    ...state,\r\n                    data,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch(error => setState({\r\n                ...state,\r\n                error\r\n            }));\r\n    }, [url]);\r\n\r\n    return state;\r\n}","C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\hooks\\useCounter.js",[],"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\04-useRef\\FocusScreen.js",[],"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\04-useRef\\RealExampleRef.js",[],"C:\\wamp\\www\\edu\\udemy\\react\\react-hooks-app\\src\\components\\05-useLayoutEffect\\Layout.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":30,"column":8,"nodeType":"46","endLine":30,"endColumn":13,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [state, url]",{"range":"53","text":"54"},[790,795],"[state, url]"]